version: "3.8"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app_network

  kafka:
    image: docker.io/bitnami/kafka:3.8
    ports:
      - "9092:9092"  
      - "9093:9093"  
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CREATE_TOPICS="db-monitoring:1:1,query-monitoring:1:1"
    depends_on:
      - zookeeper
    networks:
      - app_network
  pg_activity:
    image: tophfr/pg_activity:${TAG}
    build: 
      context: pg_activity
      dockerfile: Dockerfile
      args:
        PG_ACTIVITY_VERSION: ${VERSION}  # Fixed the syntax for passing ARG
    environment: &pgenv
      PGHOST: postgresql_db
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: postgres
    volumes:
      - "Pg_activity_Data:/app/ProducerConsumer/Pg_activity_Data"  # Make sure directory path case matches your Dockerfile
    networks:
      - app_network
    depends_on:
      postgresql_db:
        condition: service_healthy # Wait for PostgreSQL to be healthy before starting pg_activity
  stress_tester:
    build: ProducerConsumer/ActivityWatcher
    depends_on:
      postgresql_db:
        condition: service_healthy
    environment:
      HOST: postgresql_db
      PORT: 5432
      USER: postgres
      DBNAME: postgres
      CONNECTIONS: 50       
      DURATION: 100         
      DELETE_CONNECTIONS: 1 
      DELETE_DURATION: 1    
      PGPASSWORD: postgres  
    restart: always
    networks:
      - app_network
  postgresql_db:
    image: docker.io/bitnami/postgresql:16
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"  # Expose PostgreSQL on TCP port 5432
    volumes:
      - "postgresql_data:/bitnami"
  
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s


    
  python_app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app  # Mount current directory to /app in the container
      - /var/run/docker.sock:/var/run/docker.sock
      - "Pg_activity_Data:/app/ProducerConsumer/Pg_activity_Data"  # Use same volume for consistency
    depends_on:
      - kafka
      - postgresql_db
      - pg_activity
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093  # Internal Docker network port
      - KAFKA_TOPIC=events
      - POSTGRESQL_HOST=postgresql_db
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DB=postgres
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgresql_data:
    driver: local
  Pg_activity_Data:
    driver: local
  
